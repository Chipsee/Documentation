4G/LTE
******

For products shipped with a 4G/LTE module, you can use Chipsee *hardwaretest* program and the **quectel-CM** tool to configure 4G/LTE network.

.. note::

   SIM card **does not** support hot plug, **power off** before inserting/removing SIM card. 

In the Chipsee *hardware test* program, there is a **4G Enable** button, you can test the 4G function with this first. Then you can click "Netinfo" button, or "Refresh" button to check the 4G/LTE status.

To connect with an APN, there are 3 pre-configured APN profiles, 3gnet/ctnet/cmnet, and a "custom" that you can configure yourself.

.. rst-class:: text-center

  .. image:: /Media/ARM/A53/Software/Yocto_63/4g-1.jpg
    :align: center
    :width: 960

  *4G/LTE Hardware Test Program*

The Yocto Linux system pre-installed **quectel-CM** command, check available commands of **quectel-CM** and help:

.. code-block:: bash

   quectel-CM --help

To connect to an APN, e.g.: ctnet

.. code-block:: bash

   quectel-CM -s ctnet

The program should acquire an IP address from your carrier automatically.

.. rst-class:: text-center

  .. image:: /Media/ARM/A53/Software/Yocto_63/4g-2.jpg
    :align: center
    :width: 960

  *Connecting 4G/LTE Through Command Line*

You can then ping an IP address to check you're connected, such as ping the Cloudflare DNS:

.. rst-class:: text-center

  .. image:: /Media/ARM/A53/Software/Yocto_63/4g-3.jpg
    :align: center
    :width: 960

  *Ping an IP to Test Connectivity*

Next, you'll need to configure the DNS server for resolving DNS queries. Since the system employs ConnMan to handle network management, the DNS service is managed by ConnMan as well. However, this setup conflicts with **systemd-resolved.service**. When **quectel-CM** is utilized, it utilizes **systemd-resolved.service** to offer DNS resolution. Therefore, we need to switch the default DNS service to **systemd-resolved.service**.

.. code-block:: bash

   ln -sf /etc/resolv-conf.systemd /etc/resolv.conf

Additionally, you may notice that upon using **quectel-CM** to establish a 4G connection, the functionality of WiFi, Bluetooth, and Ethernet ceases due to a conflict between the **connman.service** and **systemd-resolved.service**. Consequently, the **connman.service** becomes inactive while the **systemd-resolved.service** becomes active. Disabling the 4G connection restores the functionality of the **connman.service**.

.. code-block:: bash

   ln -sf /etc/resolv-conf.connman /etc/resolv.conf
   systemctl stop systemd-resolved.service
   systemctl start connman.service

